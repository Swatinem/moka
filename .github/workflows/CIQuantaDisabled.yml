name: CI (Quanta disabled)

env:
  NUM_THREADS_DBG: "1"

on:
  push:
    paths-ignore:
    - '.devcontainer/**'
    - '.gitpod.yml'
    - '.vscode/**'
  pull_request:
    paths-ignore:
    - '.devcontainer/**'
    - '.gitpod.yml'
    - '.vscode/**'
  schedule:
    # Run against the last commit on the default branch on Friday at 8pm (UTC?)
    - cron: '0 20 * * 5'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - stable
          - beta
          - 1.51.0  # MSRV
          - nightly # For checking minimum version dependencies.

    steps:
      - name: Checkout Moka
        uses: actions/checkout@v2

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
          components: rustfmt, clippy

      - uses: Swatinem/rust-cache@v1

      - name: cargo clean
        uses: actions-rs/cargo@v1
        with:
          command: clean

      - name: Downgrade dependencies to minimal versions (Nightly only)
        uses: actions-rs/cargo@v1
        if: ${{ matrix.rust == 'nightly' }}
        with:
          command: update
          args: -Z minimal-versions

      - name: Pin some dependencies to specific versions (MSRV only)
        if: ${{ matrix.rust == '1.51.0' }}
        # hashbrown >= v0.12 requires Rust 2021 edition.
        # native-tls >= v0.2.9 requires more recent Rust version.
        # async-global-executor >= 2.1 requires Rust 2021 edition.
        # pull-down-cmark >= 0.9.2 requires Rust 2021 edition.
        run: |
          cargo update -p dashmap --precise 5.2.0
          cargo update -p indexmap --precise 1.8.2
          cargo update -p hashbrown --precise 0.11.2
          cargo update -p native-tls --precise 0.2.8
          cargo update -p async-global-executor --precise 2.0.4
          cargo update -p pulldown-cmark --precise 0.9.1

      - name: Run tests (debug, but no quanta feature)
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: -j 1 --no-default-features --features 'sync, atomic64' -- --test-threads=${{ env.NUM_THREADS_DBG }}

      - name: Run tests (release, but no quanta feature)
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: -j 1 --release --no-default-features --features 'sync, atomic64'

      - name: Run tests (future feature, but no quanta and sync features)
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: -j 1 --no-default-features --features 'future, atomic64' -- --test-threads=${{ env.NUM_THREADS_DBG }}

      - name: Run tests (future, sync and logging features, but no quanta feature)
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: -j 1 --no-default-features --features 'sync, future, atomic64, logging' -- --test-threads=${{ env.NUM_THREADS_DBG }}

      - name: Run tests (dash feature, but no quanta and sync features)
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: -j 1 --no-default-features --features 'dash, atomic64' -- --test-threads=${{ env.NUM_THREADS_DBG }}
